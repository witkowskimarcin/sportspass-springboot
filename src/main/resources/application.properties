server.port = 8080

## POSTGRES DATABASE
#
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://ec2-54-247-119-167.eu-west-1.compute.amazonaws.com:5432/d9a7iglc2v5ud1
#spring.datasource.username=gsxqwgjoiyiybx
#spring.datasource.password=dca1a6ffee41c046aa3ad5df55b33978ff41e83cb2fb685dde1022ed1ae09be7
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

# H2 DATABASE

# H2
spring.h2.console.enabled=true
#spring.h2.console.path=/h2
# hibernate configurations
 spring.jpa.show-sql=true
 spring.jpa.hibernate.ddl-auto=update
# spring.jpa.hibernate.ddl-auto=create
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Datasource
#spring.datasource.url=jdbc:h2:file:./src/main/resources/base/h2base
#spring.datasource.url=jdbc:h2:./test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# Enable remote access
spring.h2.console.settings.web-allow-others=true

# thumeleaf configurations
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false

# stripe payments
STRIPE_SECRET_KEY=sk_test_uXWSpyJbOtYaPmMcyAo2BzjE

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=fightclubservice11@gmail.com
spring.mail.password=Qwerty#1
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.auth=true;
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

## database configurations
# spring.datasource.url= jdbc:mysql://localhost:3306/spring-shop
# spring.datasource.username=root
# spring.datasource.password=

## Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true
## The format used for the keystore
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore.p12
## The password used to generate the certificate
#server.ssl.key-store-password=password
## The alias mapped to the certificate
#server.ssl.key-alias=tomcat